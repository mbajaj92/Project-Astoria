main
var b,a,c,x,y;
array [13][13][13][13]arr1;
array [5][10] swing;
{
	let d<-a-56;
	let a<-b-c+z;
	let d<-d-c+z;
	let i<-98;
	while d<45 do
		let i<-d-c;
	od;
	let madhur <-a*a;
	let soham <- d+x;
}.
/*procedure pro1(a,b,c,d); {
let b<-d-01;
let c<-b-90;
if a<10 then
		if b<10 then 
			let a<-9;
		else
			let b<-89;
		fi;
	else
		if c<10 then
			let a<-45;
		else
			let c<-10;
		fi;
	fi;
};

procedure pro2(m,n,o,p); {
let b<-89-67;
let c<-67;
while c<10 do
		if b<25 then
		while c<11 do
			let c<-c-1;
		od;
		else
		while c<11 do
			let c<-c-1;
		od;
		fi;
	od;
	let c<-c-1;
};

{
	let a<-c+d;
	let b<-c-d;
	let i<-c*d;
	let j<-c/d;
	while swing[i][j]<10 do
		let i<-c+d; #This instruction gets replaced completely 
					#because aliasing need to find solution
		let c<-c-1;
		while swing[i][j]<20 do
			let j<-a-b;
		od;
	od;
	let c<-a+23-b;
}.*/